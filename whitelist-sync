#!/bin/busybox

# Name of application, shows up in logcat
LogName="Whitelist-Sync"

# Do we have a revision?
if [ -f /data/www/whitelist/apps.conf ]
then 
	Revision=`busybox sha1sum /data/www/whitelist/apps.conf | busybox awk '{ print $1 }'`
else
	Revision="NoFile"
fi

#URL for the Update Server
URL="http://pdl.team-eureka.com/applist.php?revision=$Revision"

# Prefixed log messages are easier to distinguish
pLog() {
        echo "$LogName: $1"
}

##################################
# Now we start the actual script #
##################################

# Start infinite loop to keep the program running
while true
do
	pLog "Running $LogName"

	# Are we already running?
	if [ -f /tmp/.whitelist-sync]
	then
		pLog "Already Running, Terminating"
		exit 1
	fi
	
	# We are running, so the world must know
	touch /tmp/.whitelist-sync
	
	# Are we allowed to run?
	if [ -f /chrome/disable_whitelist ]
	then
		pLog "Whitelist Syncing disabled per user request, Terminating"
		
		# Create a empty loop so this script is never ran again.
		while true
		do
			sleep 72000
		done
		
		# Delete run file
		rm /tmp/.whitelist-sync
		
		# Somehow, if we break out, exit, do NOT go through the rest of the code
		continue
	fi

	# Check for the update
	pLog "Checking for Whitelist Updates"
	Response="$(busybox wget -q $URL -O - )"

	# Error checking for update, due to server/web issues
	if [ $? -ne 0 ]
	then
		pLog "Error Checking for update, Connection Issues"
		pLog "Restarting Service in 5 Minutes"
	
		# Delete run file
		rm /tmp/.whitelist-sync
	
		sleep 300
		continue
		
	# Update is available, do something
	elif [ "$Response" != "NoUpdate" ]
	then
		pLog "Update Found! Downloading now!"
		busybox wget -q "$Response" -O /data/www/whitelist/apps.conf
		pLog "Updated AppList Downloaded Successfully"
		
		# Delete run file
		rm /tmp/.whitelist-sync

		fi
	else
		pLog "No Update Required!"
	fi
	
	# Sleep a while
	pLog "Sleeping 20 hours"
	sleep 72000
	
	# Delete run file
	rm /tmp/.whitelist-sync

done
